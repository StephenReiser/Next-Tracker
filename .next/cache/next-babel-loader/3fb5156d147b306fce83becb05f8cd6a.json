{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/StephenReiser/Desktop/SteveProject/next-sample/pages/post.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\n\nvar Page = function Page() {\n  var router = useRouter();\n  return __jsx(React.Fragment, null, __jsx(Link, {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Home\")), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, router.query.title), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, router.query.content));\n};\n\nPage.getInitialProps = function _callee(context) {\n  var id;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = context.query.id;\n          console.log(id); // const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\n          // const show = await res.json();\n          // console.log(`Fetched show: ${show.name}`);\n          // return { show };\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Page;","map":{"version":3,"sources":["/Users/StephenReiser/Desktop/SteveProject/next-sample/pages/post.js"],"names":["useRouter","Link","Page","router","query","title","content","getInitialProps","context","id","console","log"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjB,MAAMC,MAAM,GAAGH,SAAS,EAAxB;AAEA,SACI,4BACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKG,MAAM,CAACC,KAAP,CAAaC,KAAlB,CALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,MAAM,CAACC,KAAP,CAAaE,OAAjB,CANF,CADJ;AAUD,CAbD;;AAeAJ,IAAI,CAACK,eAAL,GAAuB,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACXC,UAAAA,EADW,GACJD,OAAO,CAACJ,KADJ,CACXK,EADW;AAEnBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ,EAFmB,CAGnB;AACA;AAEA;AAEA;;AARmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAWA,eAAeP,IAAf","sourcesContent":["import { useRouter } from 'next/router';\nimport Link from 'next/link'\n\nconst Page = () => {\n  const router = useRouter();\n\n  return (\n      <>\n        <Link href='/'>\n          <a>Home</a>\n        </Link>\n    \n        <h1>{router.query.title}</h1>\n        <p>{router.query.content}</p>\n      </>\n  );\n};\n\nPage.getInitialProps = async function(context) {\n    const { id } = context.query;\n    console.log(id)\n    // const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\n    // const show = await res.json();\n  \n    // console.log(`Fetched show: ${show.name}`);\n  \n    // return { show };\n  };\n\nexport default Page;"]},"metadata":{},"sourceType":"module"}