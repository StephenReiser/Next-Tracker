{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport NewPostInput from './NewPostInput';\nimport NewPostTextArea from './NewPostTextArea';\n\nconst NewPost = props => {\n  const {\n    0: myValue,\n    1: setMyValue\n  } = useState({\n    author: '',\n    content: '',\n    date: '',\n    title: ''\n  });\n\n  const onChange = e => {\n    const data = _objectSpread({}, myValue);\n\n    data[e.target.name.toLowerCase()] = e.target.value;\n    setMyValue(data);\n  }; // obsubmit should be a fetch to the back end as a POST req and we shoulld handle it correctly there\n\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const newPosts = [...props.posts];\n    newPosts.push(myValue);\n    props.updateList(newPosts);\n    setMyValue({\n      author: '',\n      content: '',\n      date: '',\n      title: ''\n    });\n    fetch(`http://localhost:3000/api/blog`, {\n      method: 'POST',\n      body: JSON.stringify(myValue),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(data => data.json()).then(data => console.log(data)); // console.log(myValue)\n  };\n\n  return __jsx(\"form\", {\n    onSubmit: e => onSubmit(e)\n  }, __jsx(NewPostInput, {\n    value: myValue.author,\n    name: 'Author',\n    onChange: onChange\n  }), __jsx(NewPostInput, {\n    value: myValue.title,\n    name: 'Title',\n    onChange: onChange\n  }), __jsx(NewPostInput, {\n    value: myValue.date,\n    name: 'Date',\n    onChange: onChange\n  }), __jsx(NewPostTextArea, {\n    value: myValue.content,\n    name: 'Content',\n    onChange: onChange\n  }), __jsx(\"input\", {\n    type: \"submit\",\n    value: \"submit\",\n    className: \"btn btn-primary\"\n  }));\n};\n\nexport default NewPost;","map":null,"metadata":{},"sourceType":"module"}