{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/StephenReiser/Desktop/SteveProject/next-sample/pages/p/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\n\nvar Page = function Page(props) {\n  var router = useRouter();\n  return __jsx(React.Fragment, null, __jsx(Link, {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Home\")), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, router.query.id), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, props.myObject.content));\n};\n\nPage.getInitialProps = function _callee(context) {\n  var id, res, post, myArr, myObject;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = context.query.id;\n          console.log(id);\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fetch(\"http://localhost:3000/api/blog\"));\n\n        case 4:\n          res = _context.sent;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 7:\n          post = _context.sent;\n          myArr = post.filter(function (obj) {\n            return obj.title === id;\n          });\n          myObject = myArr[0];\n          console.log('HELLO'); // console.log(`Fetched show: ${show.name}`);\n\n          return _context.abrupt(\"return\", {\n            myObject: myObject\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Page;","map":{"version":3,"sources":["/Users/StephenReiser/Desktop/SteveProject/next-sample/pages/p/[id].js"],"names":["useRouter","Link","Page","props","router","query","id","myObject","content","getInitialProps","context","console","log","fetch","res","json","post","myArr","filter","obj","title"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAGA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAW;AACtB,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;AAEA,SACI,4BACA,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CADA,EAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKI,MAAM,CAACC,KAAP,CAAaC,EAAlB,CALA,EAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIH,KAAK,CAACI,QAAN,CAAeC,OAAnB,CANA,CADJ;AAUD,CAbD;;AAeAN,IAAI,CAACO,eAAL,GAAuB,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACXJ,UAAAA,EADW,GACJI,OAAO,CAACL,KADJ,CACXC,EADW;AAEnBK,UAAAA,OAAO,CAACC,GAAR,CAAYN,EAAZ;AAFmB;AAAA,2CAGDO,KAAK,kCAHJ;;AAAA;AAGbC,UAAAA,GAHa;AAAA;AAAA,2CAIAA,GAAG,CAACC,IAAJ,EAJA;;AAAA;AAIbC,UAAAA,IAJa;AAKbC,UAAAA,KALa,GAKLD,IAAI,CAACE,MAAL,CAAY,UAAAC,GAAG,EAAI;AAC/B,mBAAOA,GAAG,CAACC,KAAJ,KAAcd,EAArB;AACD,WAFa,CALK;AAQbC,UAAAA,QARa,GAQFU,KAAK,CAAC,CAAD,CARH;AAUnBN,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAVmB,CAYnB;;AAZmB,2CAcZ;AAAEL,YAAAA,QAAQ,EAARA;AAAF,WAdY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAiBA,eAAeL,IAAf","sourcesContent":["import { useRouter } from 'next/router';\nimport Link from 'next/link'\n\n\nconst Page = (props) => {\n  const router = useRouter();\n\n  return (\n      <>\n      <Link href='/'>\n          <a>Home</a>\n      </Link>\n    \n      <h1>{router.query.id}</h1>\n      <p>{props.myObject.content}</p>\n      </>\n  );\n};\n\nPage.getInitialProps = async function(context) {\n    const { id } = context.query;\n    console.log(id)\n    const res = await fetch(`http://localhost:3000/api/blog`);\n    const post = await res.json();\n    const myArr = post.filter(obj => {\n      return obj.title === id\n    })\n    const myObject = myArr[0]\n    \n    console.log('HELLO')\n  \n    // console.log(`Fetched show: ${show.name}`);\n  \n    return { myObject };\n  };\n\nexport default Page;\n\n"]},"metadata":{},"sourceType":"module"}