{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/StephenReiser/Desktop/SteveProject/next-sample/components/Home.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport MyHead from './MyHead';\nimport Result from './Result';\nimport Header from './Header';\nimport Form from './Form';\n\nvar Home = function Home() {\n  var _useState = useState({\n    calories: {\n      label: \"Calories\",\n      total: 1840,\n      target: 1840,\n      variant: 15\n    },\n    carbs: {\n      label: \"Carbs\",\n      total: 190,\n      target: 160,\n      variant: 15\n    },\n    fat: {\n      label: \"Fat\",\n      total: 55,\n      target: 60,\n      variant: 10\n    },\n    protein: {\n      label: \"Protein\",\n      total: 120,\n      target: 165,\n      variant: 10\n    }\n  }),\n      results = _useState[0],\n      setResults = _useState[1];\n\n  var onChange = function onChange(e) {\n    var data = _objectSpread({}, results);\n\n    var name = e.target.name;\n    var resultType = name.split(\" \")[0].toLowerCase();\n    var resultMacro = name.split(\" \")[1].toLowerCase();\n    data[resultMacro][resultType] = e.target.value;\n    setResults(data);\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, __jsx(MyHead, {\n    pageName: 'Home',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"flex mb-4 text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, __jsx(Result, {\n    results: results.calories,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), __jsx(Result, {\n    results: results.carbs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), __jsx(Result, {\n    results: results.fat,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), __jsx(Result, {\n    results: results.protein,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"flex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, __jsx(Form, {\n    data: results,\n    item: \"Total\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), __jsx(Form, {\n    data: results,\n    item: \"Target\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), __jsx(Form, {\n    data: results,\n    item: \"Variant\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/StephenReiser/Desktop/SteveProject/next-sample/components/Home.js"],"names":["React","useState","MyHead","Result","Header","Form","Home","calories","label","total","target","variant","carbs","fat","protein","results","setResults","onChange","e","data","name","resultType","split","toLowerCase","resultMacro","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport MyHead from './MyHead'\nimport Result from './Result'\nimport Header from './Header'\nimport Form from './Form'\n\n\nconst Home = () => {\n\n    const [results, setResults] = useState({\n        calories: {\n            label: \"Calories\",\n            total: 1840,\n            target: 1840,\n            variant: 15\n          },\n          carbs: {\n            label: \"Carbs\",\n            total: 190,\n            target: 160,\n            variant: 15\n          },\n          fat: {\n            label: \"Fat\",\n            total: 55,\n            target: 60,\n            variant: 10\n          },\n          protein: {\n            label: \"Protein\",\n            total: 120,\n            target: 165,\n            variant: 10\n          }\n    })\n\n    const onChange = (e) => {\n        const data = { ...results };\n    \n        let name = e.target.name;\n    \n        let resultType = name.split(\" \")[0].toLowerCase();\n        let resultMacro = name.split(\" \")[1].toLowerCase();\n    \n        data[resultMacro][resultType] = e.target.value;\n    \n        setResults(data);\n      }\n\n    return(\n    <div>\n        <MyHead pageName={'Home'} />\n        <Header />\n        <div className=\"flex mb-4 text-center\">\n            <Result results={results.calories} />\n            <Result results={results.carbs} />\n            <Result results={results.fat} />\n            <Result results={results.protein} />\n      </div>\n      <div className=\"flex\">\n        <Form data={results} item=\"Total\" onChange={onChange} />\n        <Form data={results} item=\"Target\" onChange={onChange} />\n        <Form data={results} item=\"Variant\" onChange={onChange} />\n      </div>\n    </div>\n    )\n}\nexport default Home"]},"metadata":{},"sourceType":"module"}