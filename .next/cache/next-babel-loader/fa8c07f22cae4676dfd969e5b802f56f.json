{"ast":null,"code":"var _jsxFileName = \"/Users/StephenReiser/Desktop/SteveProject/next-sample/components/Home.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport MyHead from './MyHead';\nimport Result from './Result';\nimport Header from './Header';\nimport Form from './Form';\nimport NewPost from './NewPost'; // import fetch from 'isomorphic-unfetch'\n\nvar Home = function Home() {\n  var _useState = useState([]),\n      results = _useState[0],\n      setResults = _useState[1]; // const onChange = (e) => {\n  //     const data = { ...results };\n  //     let name = e.target.name;\n  //     console.log(name)\n  //     // so we are naming the inputs as Total Fat or Target Carbs, so this is splitting the name so we can do results[calories][total] - super cool way to use this on all inputs - especially if we have the objects combined liek this \n  //     let resultType = name.split(\" \")[0].toLowerCase();\n  //     let resultMacro = name.split(\" \")[1].toLowerCase();\n  //     console.log(resultType)\n  //     console.log(resultMacro)\n  //     data[resultMacro][resultType] = e.target.value;\n  //     setResults(data);\n  //   }\n\n\n  fetch('/api/blog').then(function (data) {\n    return data.json();\n  }).then(function (data) {\n    return setResults(data);\n  });\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(MyHead, {\n    pageName: 'Home',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"flex mb-4 text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, results.map(function (post, index) {\n    return __jsx(Result, {\n      post: post,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    });\n  })), __jsx(\"div\", {\n    className: \"flex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(NewPost, {\n    updateList: setResults,\n    posts: results,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })));\n}; // Home.getInitialProps = async function() {\n//     const res = await fetch('/api/blog');\n//     const data = await res.json();\n//     console.log(`Show data fetched. Count: ${data.length}`);\n//     console.log(data)\n//     // return {\n//     //   setResults(data)\n//     // };\n//   };\n\n\nexport default Home;","map":{"version":3,"sources":["/Users/StephenReiser/Desktop/SteveProject/next-sample/components/Home.js"],"names":["React","useState","MyHead","Result","Header","Form","NewPost","Home","results","setResults","fetch","then","data","json","map","post","index"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CACA;;AAGA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA,kBAEeN,QAAQ,CAAC,EAAD,CAFvB;AAAA,MAERO,OAFQ;AAAA,MAECC,UAFD,iBAIf;AACA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AACA;;;AAEAC,EAAAA,KAAK,CAAC,WAAD,CAAL,CAAmBC,IAAnB,CAAwB,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACC,IAAL,EAAJ;AAAA,GAA5B,EAA6CF,IAA7C,CAAkD,UAAAC,IAAI;AAAA,WAAIH,UAAU,CAACG,IAAD,CAAd;AAAA,GAAtD;AACA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAQ,IAAA,QAAQ,EAAE,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,OAAO,CAACM,GAAR,CAAY,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC1B,WACA,MAAC,MAAD;AAAQ,MAAA,IAAI,EAAID,IAAhB;AAAsB,MAAA,GAAG,EAAIC,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA;AAGH,GAJA,CADL,CAHJ,EAUE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,OAAD;AAAS,IAAA,UAAU,EAAIP,UAAvB;AAAmC,IAAA,KAAK,EAAID,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAVF,CADA;AAoBH,CA5CD,C,CA8CA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;;;AACA,eAAeD,IAAf","sourcesContent":["import React, { useState } from 'react'\nimport MyHead from './MyHead'\nimport Result from './Result'\nimport Header from './Header'\nimport Form from './Form'\nimport NewPost from './NewPost'\n// import fetch from 'isomorphic-unfetch'\n\n\nconst Home = () => {\n\n    const [results, setResults] = useState([])\n\n    // const onChange = (e) => {\n    //     const data = { ...results };\n    \n    //     let name = e.target.name;\n    //     console.log(name)\n\n    //     // so we are naming the inputs as Total Fat or Target Carbs, so this is splitting the name so we can do results[calories][total] - super cool way to use this on all inputs - especially if we have the objects combined liek this \n\n    \n    //     let resultType = name.split(\" \")[0].toLowerCase();\n    //     let resultMacro = name.split(\" \")[1].toLowerCase();\n    //     console.log(resultType)\n    //     console.log(resultMacro)\n    \n    //     data[resultMacro][resultType] = e.target.value;\n    \n    //     setResults(data);\n    //   }\n\n    fetch('/api/blog').then(data => data.json()).then(data => setResults(data))\n    return(\n    <div>\n        <MyHead pageName={'Home'} />\n        <Header />\n        <div className=\"flex mb-4 text-center\">\n            {results.map((post, index) => {\n                return(\n                <Result post = {post} key = {index}/>\n                )\n            })}\n      </div>\n      <div className=\"flex\">\n        {/* <Form data={results} item=\"Total\" onChange={onChange} /> */}\n        <NewPost updateList = {setResults} posts = {results}/>\n        \n      </div>\n      \n      \n    </div>\n    )\n}\n\n// Home.getInitialProps = async function() {\n//     const res = await fetch('/api/blog');\n//     const data = await res.json();\n  \n//     console.log(`Show data fetched. Count: ${data.length}`);\n//     console.log(data)\n  \n//     // return {\n//     //   setResults(data)\n//     // };\n//   };\nexport default Home"]},"metadata":{},"sourceType":"module"}